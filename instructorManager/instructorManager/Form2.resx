<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2gAIAQMBAT8AKf/Z
</value>
  </data>
</root>